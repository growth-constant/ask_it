name: Main

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  CC_TEST_REPORTER_ID: "b2ad2de1f7a40733a6cd96f85d51f6047185948535f6b5d0a9c0f3389bfb1f3e"

  # `github.ref` points to the *merge commit* when running tests on a pull request, which will be a commit
  # that doesn't exists in our code base. Since this workflow triggers from a PR, we use the HEAD SHA instead.
  #
  # NOTE: These are both used by Code Climate (cc-test-reporter).
  GIT_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  GIT_BRANCH: ${{ github.head_ref || github.ref_name }}

jobs:
  matrix-test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure || false }}
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '2.7.8'
          - '3.2.5'
          - '3.3.4'
    steps:
    # when ruby version is 2.7.8, we copy Gemfile-ruby-2.lock to Gemfile.lock
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Copy Gemfile.lock
      if: ${{ matrix.ruby == '2.7.8' }}
      run: cp Gemfile-ruby-2.lock Gemfile.lock
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        rubygems: latest
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true 
    # lint
    - name: Run rubocop
      run: bundle exec rubocop
    # check if there is a cache for the gemfiles/gem of the appraisals and ruby version
    - name: Restore cache for Appraisal gems and gemfiles
      id: cache-appraisal
      uses: actions/cache/restore@v4
      with:
        path: |
          vendor/bundle
          gemfiles/*.gemfile
          gemfiles/*.gemfile.lock
        key: ask-it-${{ runner.os }}-appraisal-${{ matrix.ruby }}-${{ hashFiles('Appraisals', 'Gemfile', 'Gemfile.lock') }}
        restore-keys: |
          ask-it-${{ runner.os }}-appraisal-${{ matrix.ruby }}-
    # set up gemfile dependencies
    - name: Set up Appraisals dependencies
      run: |
        bundle config set --local path 'vendor/bundle'
        bundle exec appraisal install
    # cache the gemfiles/gem of the appraisals and the gem of the app
    - name: Cache Appraisal gems and gemfiles post-install
      uses: actions/cache/save@v4
      with:
        path: |
          vendor/bundle
          gemfiles/*.gemfile
          gemfiles/*.gemfile.lock
        key: ask-it-${{ runner.os }}-appraisal-${{ matrix.ruby }}-${{ hashFiles('Appraisals', 'Gemfile', 'Gemfile.lock') }}

    # download cc-test-reporter an
    - name: Download cc-test-reporter
      uses: ./.github/actions/download-test-reporter

    # report to Code Climate that we will send a coverage report.
    - name: "Report to Code Climate that we will send a coverage report."
      run: ./cc-test-reporter before-build

    # run tests
    - name: Run tests
      run: COVERAGE=1 bundle exec appraisal rspec

    # upload after-build coverage to Code Climate
    - name: Upload after-build coverage to Code Climate
      run: |
        ./cc-test-reporter after-build

  # if any of the matrix-test jobs failed, we fail the required-checks-and-release job
  required-checks-and-release:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - matrix-test
    steps:
      - name: failure
        if: ${{ failure() || contains(needs.*.result, 'failure') }}
        run: exit 1
      - name: success
        run: exit 0